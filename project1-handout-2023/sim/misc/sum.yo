                      | # Xiaozhi Zhu
  0x000:              |     .pos 0
  0x000:              | init:   
  0x000: 30f400010000 |     irmovl Stack, %esp
  0x006: 30f500010000 |     irmovl Stack, %ebp
  0x00c: 802c000000   |     call Main
  0x011: 00           |     halt
                      | 
                      | # Sample linked list
  0x014:              |     .align 4
  0x014:              | ele1:
  0x014: 0a000000     |     .long 0x00a
  0x018: 1c000000     |     .long ele2
  0x01c:              | ele2:
  0x01c: b0000000     |     .long 0x0b0
  0x020: 24000000     |     .long ele3
  0x024:              | ele3:
  0x024: 000c0000     |     .long 0xc00
  0x028: 00000000     |     .long 0
                      | 
  0x02c:              | Main:
  0x02c: 30f214000000 |     irmovl ele1, %edx
  0x032: 8038000000   |     call Sum
  0x037: 90           |     ret
                      | 
                      | # %edx is the head of the list
  0x038:              | Sum:
  0x038: 30f000000000 |     irmovl $0, %eax # sum
  0x03e: 6222         |     andl %edx, %edx # check if null, set CC
  0x040: 7055000000   |     jmp Test
  0x045:              | Loop:
  0x045: 501200000000 |     mrmovl (%edx), %ecx # get head->data
  0x04b: 6010         |     addl %ecx, %eax # sum += head->data
  0x04d: 502204000000 |     mrmovl 4(%edx), %edx # head = head->next
  0x053: 6222         |     andl %edx, %edx # set CC 
  0x055:              | Test:
  0x055: 7445000000   |     jne Loop
  0x05a: 90           |     ret
                      | 
  0x100:              |     .pos 0x100
  0x100:              | Stack: # The stack goes here
                      | 
