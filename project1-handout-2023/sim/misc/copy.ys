# Xiaozhi Zhu
    .pos 0
init:
    irmovl stack, %esp
	call main
	halt

    .align 4s
src:
    .long 0x00a
    .long 0x0b0
    .long 0xc00
dest:
    .long 0x111
    .long 0x222
    .long 0x333


main:
	irmovl src , %edi # src
    irmovl dest , %esi # dest
    irmovl $3 , %edx # len
	call copy
	ret

copy:
    xorl    %eax , %eax # store the result
loop:
    andl    %edx , %edx # if %edx == 0, jump to end
    jle     end
    mrmovl  (%edi) , %ecx # value = *src
    irmovl  $4 , %ebx 
    addl    %ebx , %edi # src++
    rmmovl  %ecx , (%esi) # *dest = value
    addl    %ebx , %esi # dest++
    xorl    %ecx , %eax # result ^= value
    irmovl  $1 , %ebx 
    subl    %ebx , %edx # len--
    jmp     loop 
end:
    ret

    .pos 0x400
stack:
